# This is a configuration file for the Creatbot P800.
[include mainsail.cfg]

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[save_variables]
filename: ~/printer_data/config/config_variables.cfg

[exclude_object]

[board_pins]
aliases:
  DOOR_PIN=PE7

[gcode_arcs]
resolution: 1.0

[force_move]
enable_force_move: True

[idle_timeout]
gcode:
    {% if printer.webhooks.state|lower == 'ready' %}
        {% if printer.pause_resume.is_paused %}
            {% set heaters = ["extruder", "pre-heater", "mid-heater"] %}
            {% for heater in heaters %}
                {% if printer["%s" % heater] is defined %}
                    SET_HEATER_TEMPERATURE HEATER={heater}
                {% endif %}
            {% endfor %}
        {% else %}
            TURN_OFF_HEATERS
        {% endif %}
    {% endif %}
timeout: 1800 # 0.5 hour timeout

[mcu]
canbus_uuid: 000000000010
canbus_interface: can0

[printer]
kinematics: cartesian
max_velocity: 100
max_accel: 100
max_z_velocity: 5
max_z_accel: 5
square_corner_velocity: 5.0

[stepper_x]
step_pin: PD1
dir_pin: PD0
enable_pin: !PA15
rotation_distance: 53.3
microsteps: 16
full_steps_per_rotation: 200
gear_ratio:4:3
endstop_pin: PE10
position_min: 0
position_endstop: 0
position_max: 800
homing_speed: 120
homing_retract_dist: 5

[stepper_y]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD2
rotation_distance: 60
microsteps: 8
full_steps_per_rotation: 200
gear_ratio: 2:1
endstop_pin: PE11
position_min: 0
position_endstop: 0
position_max: 800
homing_speed: 80
homing_retract_dist: 5
step_pulse_duration: 0.000005

[stepper_z]
step_pin: PD7
dir_pin: !PD6
enable_pin: !PD5
rotation_distance: 5
gear_ratio: 3:1
microsteps: 16
full_steps_per_rotation: 200
endstop_pin:PE12
position_endstop: 0
position_min:-20
position_max: 800
homing_speed: 5
second_homing_speed: 4
homing_retract_speed: 5
homing_retract_dist: 2.0
step_pulse_duration: 0.000005

[heater_generic pre-heater]
heater_pin: PD15
sensor_type: AD8495
adc_voltage: 3.3
sensor_pin: PC3
max_power: 1.0
min_temp: -235
max_temp: 300


[verify_heater pre-heater]
max_error: 120
hysteresis: 100
check_gain_time: 36000
heating_gain: 0.01


[heater_generic mid-heater]
heater_pin: PD14
sensor_type: AD8495
adc_voltage: 3.3
sensor_pin: PC2
max_power: 1.0
min_temp: -235
max_temp: 300

[verify_heater mid-heater]
max_error: 120
hysteresis: 100
check_gain_time: 3600
heating_gain: 0.01

[extruder]
step_pin: PE1
dir_pin: !PE0
enable_pin: !PB9
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 233.4
gear_ratio: 10:1
nozzle_diameter: 1
filament_diameter: 1.750
max_extrude_only_distance: 3000.0
max_extrude_only_velocity: 5000.0
max_extrude_only_accel: 300.0
max_extrude_cross_section: 100.0
heater_pin: PD13
sensor_type: AD8495
adc_voltage: 3.3
sensor_pin: PC1
max_power: 1.0
min_temp: -235
max_temp: 500
min_extrude_temp: 100
pressure_advance: 0.032
pressure_advance_smooth_time:0.040
step_pulse_duration: 0.000005

[heater_bed]
heater_pin: PD12
sensor_type: Generic 3950
sensor_pin: PC0
max_power: 1.0
min_temp: -235
max_temp: 500
control: pid
pid_kp: 74.000
pid_ki: 1.965
pid_kd: 696.525

[verify_heater heater_bed]
max_error: 120
hysteresis: 100
check_gain_time: 36000
heating_gain: 0.01

[heater_generic chamber]
heater_pin:PB14
max_power:1.0
sensor_type:Generic 3950
sensor_pin:PB1
min_temp:-50
max_temp:100

[verify_heater chamber]
max_error: 120
hysteresis: 100
check_gain_time: 36000
heating_gain: 0.01

[fan_generic Air_filter_fan]
pin: PC8
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 1.0
off_below: 0.10

[filament_airpump_sensor extruder]
switch_pin: !PE13
airpump_pin: PE2
motor_pin: PE4
pause_on_runout: False
runout_gcode: _RUNOUT_HANDLE
max_run_time: 30
insert_delay_time: 15.0
debounce_delay: 3.0
event_delay: 0.01

[state_led led]
red_pin: PD8
green_pin: PD9
blue_pin: PD10
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
idle: 0.0, 1.0, 0.5
printing: 0.0, 1.0, 0.0
paused: 1.0, 1.0, 0.0
error: 1.0, 0.0, 0.0
heating: 0.0, 0.0, 1.0

[led Interior_lighting]
white_pin: PC13
cycle_time: 0.010
initial_WHITE: 1

[fan]
pin:PC7
kick_start_time: 0.5
off_below: 0.10
max_power: 1.0

[heater_fan Sink_fan]
pin:PC6
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 100
fan_speed: 1.0

[safe_z_home]
home_xy_position:390,400
z_hop_speed: 5
speed: 150
z_hop: 5

[gcode_macro ENABLE_MOTOR]
gcode:
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
    SET_KINEMATIC_POSITION X=400 Y=400 Z=0

[gcode_macro LOAD_FILAMENT]
variable_load_distance: 2500
variable_purge_distance: 25
gcode:
    {% set speed = params.SPEED|default(200) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 10 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    RESTORE_GCODE_STATE NAME=load_state

########################################
# GCODE
########################################

[gcode_macro _START_PRINT_BASE]
description: Call when starting to print
variable_door_can_start: True
variable_filament_can_start: True
gcode:
    {% if printer['gcode_button _door_detection'] %}
        _DOOR_START_PRINT_RESPOND
    {% endif %}
    _CLEAR_LAST_FILE
    _START_FILAMENT_HANDLE

[gcode_macro _CANCEL_PRINT_BASE]
description: Call when cancelled to print
gcode:
    M220 S100
    M221 S100

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(0)|float %}
    {% set EXTRUDER_TEMP1 = params.EXTRUDER1|default(0)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|float %}
    {% if params.BED is defined %}
        M140 S{BED_TEMP}
    {% endif %}
    {% if params.EXTRUDER is defined %}
        M104 T0 S{EXTRUDER_TEMP}
    {% endif %}
    {% if params.EXTRUDER1 is defined %}
        M104 T1 S{EXTRUDER_TEMP1}
    {% endif %}
    {% if params.CHAMBER is defined %}
        M141 S{CHAMBER_TEMP}
    {% endif %}
    G28
    _START_PRINT_BED_MESH
    {% if BED_TEMP != 0 %}
        M190 S{BED_TEMP}
    {% endif %}
    {% if EXTRUDER_TEMP != 0 %}
        M109 T0 S{EXTRUDER_TEMP}
    {% endif %}
    {% if EXTRUDER_TEMP1 != 0 %}
        M109 T1 S{EXTRUDER_TEMP1}
    {% endif %}
    {% if CHAMBER_TEMP != 0 %}
        M191 S{CHAMBER_TEMP}
    {% endif %}
    G92 E0
    M117 Printing start...

[gcode_macro PRINT_START]
gcode:
    START_PRINT

[gcode_macro END_PRINT]
gcode:
    M400
    G92 E0
    G1 E-10.0 F3600
    G91
    G0 Z1.00 X20.0 Y20.0 F6000
    TURN_OFF_HEATERS
    M107
    G1 Z2 F3000
    G90
    G0  X590 Y590 F3600
    # BED_MESH_CLEAR

[gcode_macro PRINT_END]
gcode:
    END_PRINT

########################################
# GCODE
########################################

[gcode_macro G28]
rename_existing: C28
gcode:
    {% set homing_cmd = ''%}
    {% set do_x = 'X' in params|string %}
    {% set do_y = 'Y' in params|string %}
    {% set do_z = 'Z' in params|string %}

    {% if do_x %}
        SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
        G4 P300
        {% set homing_cmd = 'X ' %}
    {% endif %}
    {% if do_y %}
        SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
        G4 P300
        {% set homing_cmd = homing_cmd + 'Y ' %}
    {% endif %}
    {% if do_z %}
        {% if 'x' not in printer.toolhead.homed_axes|lower or 'y' not in printer.toolhead.homed_axes|lower %}
            {% set homing_cmd = 'X Y Z' %}
        {% else %}
           {% set homing_cmd = homing_cmd + 'Z' %}
        {% endif %}
    {% endif %}
    {% if not homing_cmd %}
        SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
        SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
        G4 P300
        C28
    {% else %}
        C28 {homing_cmd}
    {% endif %}

[gcode_macro M104]
rename_existing: C104
gcode:
    {% set hotend = printer.toolhead.extruder %}
    {% set s = params.S|default(0)|float %}
    {% set t = params.T|default(0)|int %}
    {% if params.S is defined %}
        {% if params.T is defined %}
            {% set heater_mapping = {1: "pre-heater", 2: "mid-heater",} %}
            {% set hotend = heater_mapping.get(t, "extruder") %}
        {% endif %}
        SET_HEATER_TEMPERATURE HEATER={hotend} TARGET={s}
    {% endif %}

[gcode_macro M109]
rename_existing: C109
gcode:
    {% set hotend = printer.toolhead.extruder %}
    {% set s = params.S|default(0)|float %}
    {% set t = params.T|default(0)|int %}
    M104 {rawparams}
    {% if s != 0 %}
        {% if params.T is defined %}
            {% set heater_mapping = {1: "'heater_generic pre-heater'", 2: "'heater_generic mid-heater'",} %}
            {% set hotend =heater_mapping.get(t, "'extruder'") %}
        {% endif %}
        TEMPERATURE_WAIT SENSOR={hotend} MINIMUM={s-3} MAXIMUM={s+3}
    {% endif %}

[gcode_macro M141]
gcode:
    {% set s = params.S|default(0)|float %}
    {% if params.S is defined %}
        SET_HEATER_TEMPERATURE HEATER=chamber target={s|int}
    {% endif %}

[gcode_macro M190]
rename_existing: C190
gcode:
    {% set s = params.S|default(0)|float %}
    {% if params.S is defined %}
        SET_HEATER_TEMPERATURE HEATER="heater_bed" TARGET={s}
        {% if s != 0 %}
            TEMPERATURE_WAIT SENSOR="heater_bed" MINIMUM={s-3} MAXIMUM={s+3}
        {% endif %}
    {% endif %}

[gcode_macro M191]
gcode:
    {% set s = params.S|default(0)|float %}
    {% if params.S is defined %}
        M141 S{s}
        {% if s != 0 %}
            TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={s-3} MAXIMUM={s+3}
        {% endif %}
    {% endif %}

[gcode_macro M84]
rename_existing: C84
gcode:
    C84
    SET_STEPPER_ENABLE STEPPER=stepper_z enable=1

########################################
# CANCEL_PRINT/PAUSE/RESUME/
########################################

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True
variable_custom_park_x    : 400.0
variable_custom_park_y    : 300.0
variable_custom_park_dz   : 20.0
variable_retract          : 2.0
variable_cancel_retract   : 10.0
variable_speed_retract    : 60.0
variable_unretract        : 20.0
variable_speed_unretract  : 6.0
variable_speed_hop        : 4.0
variable_speed_move       : 100.0
variable_park_at_cancel   : False
variable_park_at_cancel_x : None
variable_park_at_cancel_y : None
variable_use_fw_retract   : False
variable_idle_timeout     : 600
variable_filament_sensor  : "filament_airpump_sensor extruder"
variable_user_temp_macro  : "_USER_TEMP_RESUME"
variable_user_pause_macro : "_USER_PAUSE"
variable_user_cancel_macro: "_USER_CANCEL"
gcode:
 # Nothing

[gcode_macro _USER_PAUSE]
gcode:
    {% set extruderTools = [('extruder', 'last_extruder_temp'),
           ('heater_generic pre-heater', 'last_perheater_temp'),
           ('heater_generic mid-heater', 'last_midheater_temp')] %}
    {% set act = printer.gcode_move.gcode_position %}
    SAVE_VARIABLE VARIABLE=power_resume_z VALUE={act.z}
    {% for extruder_name, name in extruderTools %}
        {% set temp = printer[extruder_name].target if extruder_name in printer else 0 %}
        {% set restore = False if printer[extruder_name] == ''
                else True if params.RESTORE|default(1)|int == 1 else False %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE={name} VALUE="{{'restore': restore, 'temp': temp}}"
    {% endfor %}

[gcode_macro _USER_TEMP_RESUME]
gcode:
    {% set extruder_info = [
        {'index': 0, 'name': 'last_extruder_temp'},
        {'index': 1, 'name': 'last_perheater_temp'},
        {'index': 2, 'name': 'last_midheater_temp'}] %}
    {% for info in extruder_info %}
        {% set variable = printer["gcode_macro RESUME"][info.name] %}
        {% if variable.restore %}
            M104 T{ info.index } S{ variable.temp }
        {% endif %}
    {% endfor %}
    {% for info in extruder_info %}
        {% set variable = printer["gcode_macro RESUME"][info.name] %}
        {% if variable.restore %}
            {% set heater_mapping = {1: "heater_generic pre-heater",
                                     2: "heater_generic mid-heater"} %}
            {% set tool = heater_mapping.get(info.index, "extruder") %}
            {% set needwait = True if printer[tool].temperature < variable.temp else False %}
            {% if needwait %}
                RESPOND TYPE=echo MSG='{"Restoring heater temperature, this may take some time."}'
                M109 T{info.index} S{variable.temp}
                {% endif %}
        {% endif %}
    {% endfor %}

[gcode_macro _USER_CANCEL]
gcode:
    {% if 'z' in printer.toolhead.homed_axes %}
        G91
        G1 Z30 F600 ; lift nozzle
    {% endif %}
    M84

[gcode_macro _CLIENT_EXTRUDE]
description: Extrudes, if the extruder is hot enough
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
  {% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
  {% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
  {% set absolute_extrude = printer.gcode_move.absolute_extrude %}
  ##### end of definitions #####
  {% if printer.toolhead.extruder != '' %}
    {% if printer[printer.toolhead.extruder].can_extrude %}
      {% if use_fw_retract %}
        {% if length < 0 %}
          G10
        {% else %}
          G11
        {% endif %}
      {% else %}
        M83
        G1 E{length} F{(speed|float|abs) * 60}
        {% if absolute_extrude %}
          M82
        {% endif %}
      {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_last_extruder_temp: {'restore': False, 'temp': 0}
variable_last_perheater_temp: {'restore': False, 'temp': 0}
variable_last_midheater_temp: {'restore': False, 'temp': 0}
variable_restore_idle_timeout: 0
variable_idle_state: False
variable_filament_state: False
gcode:
    _FILAMENT_UPDATE
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set do_resume = False %}
    {% set can_extrude = True if printer.toolhead.extruder == ''           # no extruder defined in config
                    else printer[printer.toolhead.extruder].can_extrude %} # status of active extruder
    #### Printer comming from timeout idle state ####
    {% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
    {% endif %}
    {% if last_extruder_temp.restore or last_perheater_temp.restore or last_midheater_temp.restore %}
        {client.user_temp_macro|default("")}
        {% set do_resume = True %}
    {% elif can_extrude %}
        {% set do_resume = True %}
    {% endif %}
    _ACT_RESUME DO_RESUME={do_resume}

[gcode_macro _ACT_RESUME]
gcode:
    ##### get user parameters or use default #####
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
    {% set sp_move = client.speed_move|default(velocity) %}
    {% set filament_state = printer['gcode_macro RESUME'].filament_state|default(False)|lower %}
    {% set restore_idle_timeout = printer['gcode_macro RESUME'].restore_idle_timeout|default(0) %}

    {% if filament_state == "false" %}
        AIR_PUMP_ON
    {% endif %}
    {% if printer[printer.toolhead.extruder].can_extrude %}
        {% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
        _CLIENT_EXTRUDE
        RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
    {% else %}
        RESPOND TYPE=error MSG='{"extruder not hot enough, Please confirm whether the temperature is normal."}'
    {% endif %}

########################################
# filament_runout
########################################

[gcode_macro AIR_PUMP_ON]
gcode:
    SET_AIRPUMP AIRPUMP=extruder VALUE=1 RUN_TIME=20

[gcode_macro AIR_PUMP_OFF]
gcode:
    SET_AIRPUMP AIRPUMP=extruder VALUE=0

[gcode_macro _START_FILAMENT_HANDLE]
gcode:
    {% set runout = True if not printer['filament_airpump_sensor extruder'].enabled
                    else printer['filament_airpump_sensor extruder'].filament_detected %}
    {% if not runout %}
        SET_AIRPUMP AIRPUMP=extruder VALUE=1 RUN_TIME=10
    {% endif %}
    G4 P5000
    _RUNOUT_HANDLE

[gcode_macro _FILAMENT_UPDATE]
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set runout = True if client.filament_sensor|default("") == ""     # no runout
                    else True if not printer[client.filament_sensor].enabled    # sensor is disabled
                    else printer[client.filament_sensor].filament_detected %}   # sensor status
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=filament_state VALUE="{runout}"

[gcode_macro _RUNOUT_HANDLE]
description: filament state update
gcode:
    _FILAMENT_UPDATE
    {% if printer.print_stats.state ==  "printing" %}
        _RUNOUT_PAUSE
    {% endif %}

[gcode_macro _RUNOUT_PAUSE]
gcode:
    {% set filament_state = printer['gcode_macro RESUME'].filament_state.runout|default(False) %}
    {% if not filament_state %}
        PAUSE
        M118 "Nothing! granular material in the silo has been run out."
    {% endif %}

########################################
# power loss recovery
########################################

[delayed_gcode _CHECK_POWER_LOSS_RECOVERY]
initial_duration: 1
gcode:
    {% set was_interrupted = printer.save_variables.variables.was_interrupted | default(False) | string %}
    {% set enable_recovery = printer.save_variables.variables.power_loss_recovery | default(Ture) | string %}
    {% if enable_recovery != "False" and was_interrupted == "True" %}
        RESPOND TYPE=command MSG="action:prompt_begin "
        RESPOND TYPE=command MSG="action:prompt_text The last print job was not completed continue printing?"
        RESPOND TYPE=command MSG="action:prompt_footer_button Continue|_RESUME_INTERRUPTED"
        RESPOND TYPE=command MSG="action:prompt_footer_button Cancel|_ABORT_INTERRUPTED|error"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% endif %}

[gcode_shell_command _CLEAR_PLR]
command: sh /home/klipper/klipper/scripts/clear_plr.sh
timeout: 5.
verbose: False

[gcode_macro _CLEAR_LAST_FILE]
gcode:
    {% set filename = '' %}
    {% set filepath = '' %}
    RUN_SHELL_COMMAND CMD=_CLEAR_PLR
    SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename }"'
    SAVE_VARIABLE VARIABLE=filepath VALUE='"{ filepath }"'
    {% set zero_vars = ['power_resume_x', 'power_resume_y', 'power_resume_z'] %}
    {% for var in zero_vars %}
    SAVE_VARIABLE VARIABLE={var} VALUE=0
    {% endfor %}
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False

[gcode_shell_command _POWER_LOSS_RECOVERY]
command: /home/klipper/klipper/scripts/plr.sh
timeout: 420.
verbose: False

[gcode_macro _RESUME_INTERRUPTED]
gcode:
    {% set sv = printer.save_variables.variables %}
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set park_dz = client.custom_park_dz|default(2.0)|abs %}
    RESPOND TYPE=command MSG="action:prompt_end"
    SET_GCODE_OFFSET Z=0 MOVE=0
    {% set z_height = params.Z_HEIGHT|default(sv.power_resume_z)|float %}
    {% set is_paused = sv.power_loss_paused|default(False) %}
    {% set last_file = params.GCODE_FILE|default(sv.last_file)|string %}
    {% set hotend = sv.power_resume_extruder|default("extruder")%}
    {% set z_offset = sv.nozzle_z_offset_val|default(0)|float %}
    {% set z_offset_total = park_dz if is_paused else 0 %}
    {% if hotend == "extruder1" %}
        {% set z_offset_total = z_offset_total +  z_offset %}
    {% endif %}
    M118 Recovery in progress, please wait
    RUN_SHELL_COMMAND CMD=_POWER_LOSS_RECOVERY PARAMS="{z_height} \"{last_file}\" \"{z_offset_total}\""
    SDCARD_PRINT_FILE FILENAME=.plr/"{last_file}"
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False

[gcode_macro _ABORT_INTERRUPTED]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    _CLEAR_LAST_FILE

[include module/*.cfg]
